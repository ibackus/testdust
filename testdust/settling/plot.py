#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Mar 17 11:10:19 2017

@author: ibackus
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages

import pynbody
import diskpy
import os
SimArray = pynbody.array.SimArray
import json

from . import analyze

# Definitions
G = SimArray(1.0, 'G')
kB = SimArray(1.0, 'k')
Msol = SimArray(1.0, 'Msol')

def dustDensityProfiles(sim, pars, plotOrbits=[0, 10, 20, 30, 40], line='o', 
                        **kwargs):
    """
    Replicates figure 8 of pl15 for a settling test simulation generated by
    testdust.
    
    Parameters
    ----------
    sim : list
        A list of simulation snapshots
    pars : dict
        Param dict (see diskpy.utils.configparser)
    plotOrbits : list
        A list of which orbits to plot a dust density profile at
    line : str
        Line type for the plot (passed to plt.plot) e.g. 'o' or '-x' etc...
    **kwargs get passed to matplotlib.pyplot.plot
    """
    t = analyze.settlingTimes(sim, pars)
    period = analyze.settlingPeriod(pars)
    nOrbits = (t/period).in_units('1')
    iPlot = []
    realPlotOrbits = []
    oldPlotOrb = -1
    for plotOrbit in plotOrbits:
        i = abs(nOrbits - plotOrbit).argmin()
        newPlotOrb = nOrbits[i]
        if newPlotOrb > oldPlotOrb:
            iPlot.append(i)
            realPlotOrbits.append(newPlotOrb)
            print 'plotting', newPlotOrb, 'orbits at sim', i
            
    plotargs = {'markeredgecolor': 'none', 'alpha': 0.3, 'markersize': 2}
    plotargs.update(kwargs)
    
    for i, orb in zip(iPlot, realPlotOrbits):
    
        f = sim[i]
        f['rho'].convert_units('g cm**-3')
        f['pos'].convert_units('au')
        plt.plot(f['z'], f['rho']*f['dustFrac'], line, **plotargs)

    plt.xlim(-2.5, 2.5)
    plt.ylim(0, 7e-14)
    plt.legend(['{0:.3} orbits'.format(orb) for orb in realPlotOrbits], 
                markerscale=3)
    plt.xlabel('z (AU)', fontsize=14)
    plt.ylabel(r'$\rho_{dust}$ ($g\ cm^{-3}$)', fontsize=14)
    
def dustFracDot2D(f, binsize=0.1 , cmax=0.0005):
    """
    Generates a 2D binned histogram plot of dustFracDot for a settling test
    snapshot.  This can be useful to visualize structure imposed by the grid.
    """
    binmax=[2.5, 10]
    plt.subplot(1,2,1)
    bins = [np.arange(-xmax, xmax, binsize) for xmax in binmax]
    diskpy.plot.heatmap(f['y'], f['z'], f['dustFracDot'], bins=bins)
    plt.axis('equal')
    plt.xlabel('y')
    plt.ylabel('z')
    plt.clim(-cmax, cmax)

    plt.subplot(1,2,1)
#     binsize = 0.1
    binmax = [2, 4]

    plt.subplot(1,2,2)
    bins = [np.arange(-xmax, xmax, binsize) for xmax in binmax]
    diskpy.plot.heatmap(f['y'], f['z'], f['dustFracDot'], bins=bins)
    plt.axis('equal')
    plt.clim(-cmax, cmax)